<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.toseektech.consumer.dao.EmpolyeeMapper">
  <resultMap id="BaseResultMap" type="cn.toseektech.consumer.entity.Empolyee">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="idendity" jdbcType="VARCHAR" property="idendity" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="is_quite" jdbcType="BIT" property="isQuite" />
    <result column="position_type" jdbcType="INTEGER" property="positionType" />
    <result column="education_degree" jdbcType="VARCHAR" property="educationDegree" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, idendity, gender, is_quite, position_type, education_degree
  </sql>
  <select id="selectByExample" parameterType="cn.toseektech.consumer.entity.EmpolyeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_empolyee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_empolyee
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_empolyee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.toseektech.consumer.entity.EmpolyeeExample">
    delete from t_empolyee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.toseektech.consumer.entity.Empolyee">
    insert into t_empolyee (id, name, idendity, 
      gender, is_quite, position_type, 
      education_degree)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{idendity,jdbcType=VARCHAR}, 
      #{gender,jdbcType=TINYINT}, #{isQuite,jdbcType=BIT}, #{positionType,jdbcType=INTEGER}, 
      #{educationDegree,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.toseektech.consumer.entity.Empolyee">
    insert into t_empolyee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="idendity != null">
        idendity,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="isQuite != null">
        is_quite,
      </if>
      <if test="positionType != null">
        position_type,
      </if>
      <if test="educationDegree != null">
        education_degree,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idendity != null">
        #{idendity,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="isQuite != null">
        #{isQuite,jdbcType=BIT},
      </if>
      <if test="positionType != null">
        #{positionType,jdbcType=INTEGER},
      </if>
      <if test="educationDegree != null">
        #{educationDegree,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.toseektech.consumer.entity.EmpolyeeExample" resultType="java.lang.Long">
    select count(*) from t_empolyee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_empolyee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.idendity != null">
        idendity = #{record.idendity,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.isQuite != null">
        is_quite = #{record.isQuite,jdbcType=BIT},
      </if>
      <if test="record.positionType != null">
        position_type = #{record.positionType,jdbcType=INTEGER},
      </if>
      <if test="record.educationDegree != null">
        education_degree = #{record.educationDegree,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_empolyee
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      idendity = #{record.idendity,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      is_quite = #{record.isQuite,jdbcType=BIT},
      position_type = #{record.positionType,jdbcType=INTEGER},
      education_degree = #{record.educationDegree,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.toseektech.consumer.entity.Empolyee">
    update t_empolyee
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idendity != null">
        idendity = #{idendity,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="isQuite != null">
        is_quite = #{isQuite,jdbcType=BIT},
      </if>
      <if test="positionType != null">
        position_type = #{positionType,jdbcType=INTEGER},
      </if>
      <if test="educationDegree != null">
        education_degree = #{educationDegree,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.toseektech.consumer.entity.Empolyee">
    update t_empolyee
    set name = #{name,jdbcType=VARCHAR},
      idendity = #{idendity,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      is_quite = #{isQuite,jdbcType=BIT},
      position_type = #{positionType,jdbcType=INTEGER},
      education_degree = #{educationDegree,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="queryAll" resultMap="BaseResultMap">
      select 
        <include refid="Base_Column_List" />
      from 
         t_empolyee
  </select>
  
  <select id="queryEmpolyeeByIds" resultMap="BaseResultMap">
      select 
        <include refid="Base_Column_List" />
      from 
         t_empolyee
      where id in
      <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
              #{id}
     </foreach>
  </select>
  
 
</mapper>