<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.toseektech.consumer.dao.CourseMapper">
	<resultMap id="BaseResultMap"
		type="cn.toseektech.consumer.entity.Course">
		<id column="course_id" jdbcType="BIGINT" property="courseId" />
		<result column="course_name" jdbcType="VARCHAR"
			property="courseName" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		course_id, course_name
	</sql>
	<select id="selectByExample"
		parameterType="cn.toseektech.consumer.entity.CourseExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_course
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_course
		where course_id = #{courseId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from t_course
		where course_id = #{courseId,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="cn.toseektech.consumer.entity.CourseExample">
		delete from t_course
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="cn.toseektech.consumer.entity.Course">
		insert into t_course (course_id, course_name)
		values (#{courseId,jdbcType=BIGINT}, #{courseName,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.toseektech.consumer.entity.Course">
		insert into t_course
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="courseId != null">
				course_id,
			</if>
			<if test="courseName != null">
				course_name,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="courseId != null">
				#{courseId,jdbcType=BIGINT},
			</if>
			<if test="courseName != null">
				#{courseName,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.toseektech.consumer.entity.CourseExample"
		resultType="java.lang.Long">
		select count(*) from t_course
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update t_course
		<set>
			<if test="record.courseId != null">
				course_id = #{record.courseId,jdbcType=BIGINT},
			</if>
			<if test="record.courseName != null">
				course_name = #{record.courseName,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update t_course
		set course_id = #{record.courseId,jdbcType=BIGINT},
		course_name = #{record.courseName,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.toseektech.consumer.entity.Course">
		update t_course
		<set>
			<if test="courseName != null">
				course_name = #{courseName,jdbcType=VARCHAR},
			</if>
		</set>
		where course_id = #{courseId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="cn.toseektech.consumer.entity.Course">
		update t_course
		set course_name = #{courseName,jdbcType=VARCHAR}
		where course_id = #{courseId,jdbcType=BIGINT}
	</update>

	<insert id="batchInsert">
		INSERT INTO t_course
		(
		<include refid="Base_Column_List" />
		)
		VALUES
		<foreach collection="list" item="course" separator=",">
			(#{course.courseId},#{course.courseName})
		</foreach>
	</insert>

	<select id="queryMaxCourseCount"
		resultType="cn.toseektech.consumer.entity.MaxCourseCount">
		SELECT
          c.course_id AS courseId,
		  c.course_name AS courseName,
		  COUNT(s.id) AS maxCount
		FROM t_student s
		  LEFT JOIN t_student_course_ref r ON s.id=r.student_id
		  LEFT JOIN t_course c ON r.course_id = c.course_id
		GROUP BY c.course_id
		HAVING maxCount =
		(SELECT MAX(t.num) m FROM
		(
		 SELECT
		   c.course_id,
		   c.course_name,
		 COUNT(s.id) AS num
		 FROM t_student s
		 LEFT JOIN t_student_course_ref r ON s.id=r.student_id
		 LEFT JOIN t_course c ON r.course_id = c.course_id
		 GROUP BY c.course_id
		) t)
	</select>
</mapper>